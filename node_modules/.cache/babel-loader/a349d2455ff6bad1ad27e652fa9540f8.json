{"ast":null,"code":"var _jsxFileName = \"/Users/justindebruin/Desktop/Code Academy/course_work/strangers_things/src/components/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport API from '../utilities/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Post = ({\n  name,\n  amount,\n  type,\n  id,\n  updateDrinkList\n}) => {\n  _s();\n\n  const [updateAmount, setUpdateAmount] = useState(0);\n\n  function handleUpdate(e) {\n    setUpdateAmount(Number(e.target.value));\n  }\n\n  async function updatePost() {\n    const updatedAmount = amount + updateAmount;\n    const data = {\n      amount: updatedAmount,\n      id\n    };\n    await API.makeRequest('/post', 'PUT', data);\n    setUpdateAmount(0);\n    updatePostList(updatedAmount, id);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"name: \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"amount: \", amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"type: \", type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions-container\",\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: updatePost,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleUpdate,\n          value: updateAmount,\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Use\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Post, \"T9keFwcTFymuVk3AXTpmLdRgXdE=\");\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/justindebruin/Desktop/Code Academy/course_work/strangers_things/src/components/Post.js"],"names":["React","useState","API","Post","name","amount","type","id","updateDrinkList","updateAmount","setUpdateAmount","handleUpdate","e","Number","target","value","updatePost","updatedAmount","data","makeRequest","updatePostList"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,kBAAhB;;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,MAAP;AAAeC,EAAAA,IAAf;AAAqBC,EAAAA,EAArB;AAAyBC,EAAAA;AAAzB,CAAD,KAA+C;AAAA;;AACxD,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,CAAD,CAAhD;;AAEA,WAASU,YAAT,CAAsBC,CAAtB,EAAyB;AACrBF,IAAAA,eAAe,CAACG,MAAM,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAP,CAAf;AACH;;AAED,iBAAeC,UAAf,GAA4B;AACxB,UAAMC,aAAa,GAAGZ,MAAM,GAAGI,YAA/B;AACA,UAAMS,IAAI,GAAG;AACTb,MAAAA,MAAM,EAAEY,aADC;AAETV,MAAAA;AAFS,KAAb;AAIA,UAAML,GAAG,CAACiB,WAAJ,CAAgB,OAAhB,EAAyB,KAAzB,EAAgCD,IAAhC,CAAN;AACAR,IAAAA,eAAe,CAAC,CAAD,CAAf;AACAU,IAAAA,cAAc,CAACH,aAAD,EAAgBV,EAAhB,CAAd;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAA,8BACI;AAAA,6BAAUH,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,+BAAYC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,6BAAUC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACI;AAAA,gCACI;AAAQ,UAAA,OAAO,EAAEU,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,QAAQ,EAAEL,YAAjB;AAA+B,UAAA,KAAK,EAAEF,YAAtC;AAAoD,UAAA,IAAI,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,sBADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAlCD;;GAAMN,I;;KAAAA,I;AAoCN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport API from '../utilities/api';\n\nconst Post = ({name, amount, type, id, updateDrinkList}) => {\n    const [updateAmount, setUpdateAmount] = useState(0);\n\n    function handleUpdate(e) {\n        setUpdateAmount(Number(e.target.value));\n    }\n\n    async function updatePost() {\n        const updatedAmount = amount + updateAmount;\n        const data = {\n            amount: updatedAmount,\n            id\n        }\n        await API.makeRequest('/post', 'PUT', data);\n        setUpdateAmount(0);\n        updatePostList(updatedAmount, id);\n    }\n\n    return (\n        <div className=\"post\">\n            <div>\n                <p>name: {name}</p>\n                <p>amount: {amount}</p>\n                <p>type: {type}</p>\n            </div>\n            <div className=\"actions-container\">\n                <>\n                    <button onClick={updatePost}>Edit</button>\n                    <input onChange={handleUpdate} value={updateAmount} type=\"number\" />\n                </>\n                <button>Use</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}