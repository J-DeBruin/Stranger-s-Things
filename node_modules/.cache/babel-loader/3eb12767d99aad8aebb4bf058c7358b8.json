{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/charl/Desktop/Fullstack Academy/course_work/Stranger-s-Things/Stranger-s-Things/src/components/Login.js\",\n    _s = $RefreshSig$();\n\n//After a successful login, website takes you to Profile, where messages are shown:\n// In Profile:\n//      There's a personalized welcome message\n//      \"Messages to Me:\"\n//      populated messages sent to user from different users (probably using map function?)\n//      An alert that says \"Success: Succesfully logged in!\"\n//      \"Messages from Me:\"\n//      populated messages sent from user to different users (probably using map function?)\nimport React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport API from '../utilities/api';\nimport TokenUtilities from '../utilities/token'; // const BASE_URL = 'https://strangers-things.herokuapp.com';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  setToken\n}) => {\n  _s();\n\n  let history = useHistory(); // const BASE_URL = 'https://strangers-things.herokuapp.com/api/';\n\n  const [user, setUser] = useState({\n    username: '',\n    password: ''\n  });\n\n  async function storeToken() {\n    try {\n      // const response = await fetch(`${BASE_URL}/login`, {\n      //     method: 'POST',\n      //     header: {\n      //         'Content-Type': 'application/json',\n      //     },\n      //     body: JSON.stringify({user: user})\n      // });\n      // const data = await response.json();\n      //replace 'vb-token'\n      const data = await API.makeRequest('/users/login', 'POST', {\n        user\n      });\n      TokenUtilities.setToken(data.token);\n      setToken(data.token); // console.log(data);\n      // localStorage.setItem('vb-token', data.token);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      history.push(\"/Home\");\n    }\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    storeToken();\n  }\n\n  function handleInput(event) {\n    const userKey = event.target.attributes['name'].value;\n    const newState = { ...user\n    };\n    newState[userKey] = event.target.value;\n    setUser(newState);\n    console.log(user, setUser);\n  }\n\n  const LogOut = () => {\n    localStorage.clear();\n    window.location.href = \"/\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        name: \"username\",\n        value: user.username,\n        onChange: handleInput,\n        placeholder: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        required: true,\n        name: \"password\",\n        value: user.password,\n        onChange: handleInput,\n        placeholder: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password-confirmation\",\n        required: true,\n        name: \"password-confirmation\",\n        value: user.password,\n        onChange: handleInput,\n        placeholder: \"password-confirmation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"7pW4RyDcvWsDZn0AuHaR2Mc6Tf8=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/mnt/c/Users/charl/Desktop/Fullstack Academy/course_work/Stranger-s-Things/Stranger-s-Things/src/components/Login.js"],"names":["React","useState","Link","useHistory","API","TokenUtilities","Login","setToken","history","user","setUser","username","password","storeToken","data","makeRequest","token","error","console","log","push","handleSubmit","event","preventDefault","handleInput","userKey","target","attributes","value","newState","LogOut","localStorage","clear","window","location","href"],"mappings":"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","sourcesContent":["//After a successful login, website takes you to Profile, where messages are shown:\n// In Profile:\n//      There's a personalized welcome message\n//      \"Messages to Me:\"\n//      populated messages sent to user from different users (probably using map function?)\n//      An alert that says \"Success: Succesfully logged in!\"\n//      \"Messages from Me:\"\n//      populated messages sent from user to different users (probably using map function?)\nimport React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport API from '../utilities/api';\nimport TokenUtilities from '../utilities/token';\n\n// const BASE_URL = 'https://strangers-things.herokuapp.com';\n\nconst Login = ({setToken}) => {\n    let history = useHistory();\n    // const BASE_URL = 'https://strangers-things.herokuapp.com/api/';\n    const [user, setUser] = useState({username: '', password: ''});\n\n    async function storeToken() {\n        try {\n            // const response = await fetch(`${BASE_URL}/login`, {\n            //     method: 'POST',\n            //     header: {\n            //         'Content-Type': 'application/json',\n            //     },\n            //     body: JSON.stringify({user: user})\n            // });\n            // const data = await response.json();\n            //replace 'vb-token'\n            const data = await API.makeRequest('/users/login', 'POST', {user});\n            TokenUtilities.setToken(data.token);\n            setToken(data.token);\n            // console.log(data);\n            // localStorage.setItem('vb-token', data.token);\n        } catch (error) {\n            console.log(error);\n        } finally {\n            history.push(\"/Home\");\n        }\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        storeToken();\n    }\n\n    function handleInput(event) {\n        const userKey = event.target.attributes['name'].value;\n        const newState = {...user};\n        newState[userKey] = event.target.value;\n        setUser(newState);\n        console.log(user, setUser)\n    }\n\n    const LogOut = () => {\n        localStorage.clear();\n        window.location.href = \"/\";\n    }\n\n    return (\n        <div>\n            {/* <Link to='/'>Strangers Things</Link> */}\n            <form onSubmit={handleSubmit}>\n                <input type='text'\n                        required\n                        name='username'\n                        value={user.username}\n                        onChange={handleInput}\n                        placeholder='username'/>\n                <input type='password'\n                        required\n                        name='password'\n                        value={user.password}\n                        onChange={handleInput}\n                        placeholder='password'></input>\n                <input type='password-confirmation'\n                        required\n                        name='password-confirmation'\n                        value={user.password}\n                        onChange={handleInput}\n                        placeholder='password-confirmation'></input>\n                <button>Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}