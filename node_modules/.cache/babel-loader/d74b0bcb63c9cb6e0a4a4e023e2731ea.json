{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/charl/Desktop/Fullstack Academy/course_work/Stranger-s-Things/Stranger-s-Things/src/components/Posts.js\",\n    _s = $RefreshSig$();\n\n// This will show all the Posts\n// Contains Header, POSTS, followed by text posts, search input, and basic link for Add Post\n// then it populates all the different posts\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport API from '../utilities/api';\nimport Post from './Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Posts = () => {\n  _s();\n\n  const [postList, setPostList] = useState([]);\n  useEffect(async function () {\n    try {\n      const data = await API.makeRequest(`/posts`, 'GET');\n      console.log(data);\n      setPostList(data.data.posts);\n    } catch (error) {\n      console.error(error);\n    }\n  }, []); // function updatePostList(data) {}\n  // const postElement = postList.map((post, i) => <Post title={post.title}\n  //                                                     description={post.description}\n  //                                                     price={post.price}\n  //                                                     seller={post.author.username}\n  //                                                     location={post.location} \n  //                                                     id={post._id}\n  //                                                     key={`post-${i}`}\n  //                                                     updatePostList={updatePostList} \n  //                                                     />);\n\n  return (\n    /*#__PURE__*/\n    // <div id=\"post-container\">\n    //     {postElement}\n    // </div>\n    _jsxDEV(\"div\", {\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Seller: \", seller]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: \", price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Location: \", location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(Posts, \"F3SI41Jj1uID6zyteUvbfaAJRps=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/mnt/c/Users/charl/Desktop/Fullstack Academy/course_work/Stranger-s-Things/Stranger-s-Things/src/components/Posts.js"],"names":["React","useState","useEffect","ReactDOM","API","Post","Posts","postList","setPostList","data","makeRequest","console","log","posts","error","title","description","seller","price","location"],"mappings":";;;AAAA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAE,kBAAkB;AACzB,QAAI;AACA,YAAMO,IAAI,GAAG,MAAML,GAAG,CAACM,WAAJ,CAAiB,QAAjB,EAA0B,KAA1B,CAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAD,MAAAA,WAAW,CAACC,IAAI,CAACA,IAAL,CAAUI,KAAX,CAAX;AACH,KAJD,CAIE,OAAOC,KAAP,EAAc;AACZH,MAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACH;AACJ,GARQ,EAQN,EARM,CAAT,CAJgB,CAchB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACI;AACA;AACA;AACA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAA,gCACI;AAAA,oBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,iCAAYC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA,gCAAWC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA,mCAAcC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAA,gCACI;AAAA,iCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,yBADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAoBH,CA9CD;;GAAMb,K;;KAAAA,K;AAgDN,eAAeA,KAAf","sourcesContent":["// This will show all the Posts\n// Contains Header, POSTS, followed by text posts, search input, and basic link for Add Post\n// then it populates all the different posts\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport API from '../utilities/api';\nimport Post from './Post';\n\n\nconst Posts = () => {\n\n    const [postList, setPostList] = useState([]); \n\n    useEffect( async function () {\n        try {\n            const data = await API.makeRequest(`/posts`, 'GET');\n            console.log(data);\n            setPostList(data.data.posts);\n        } catch (error) {\n            console.error(error);\n        }\n    }, []);\n\n    // function updatePostList(data) {}\n\n    // const postElement = postList.map((post, i) => <Post title={post.title}\n    //                                                     description={post.description}\n    //                                                     price={post.price}\n    //                                                     seller={post.author.username}\n    //                                                     location={post.location} \n    //                                                     id={post._id}\n    //                                                     key={`post-${i}`}\n    //                                                     updatePostList={updatePostList} \n    //                                                     />);\n\n    return (\n        // <div id=\"post-container\">\n        //     {postElement}\n        // </div>\n        <div className=\"post\">\n            <div>\n                <h3>{title}</h3>\n                <p>{description}</p>\n                <p>Seller: {seller}</p>\n                <p>Price: {price}</p>\n                <p>Location: {location}</p>\n            </div>\n            <div>\n                <>\n                <button>Edit</button>\n                </>\n                <button>Delete</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Posts;"]},"metadata":{},"sourceType":"module"}