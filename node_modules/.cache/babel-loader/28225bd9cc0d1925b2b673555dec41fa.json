{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/charl/Desktop/Fullstack Academy/course_work/Stranger-s-Things/Stranger-s-Things/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'https://strangers-things.herokuapp.com';\n\nconst Login = () => {\n  _s();\n\n  const BASE_URL = 'https://strangers-things.herokuapp.com/api/';\n  const [user, setUser] = useState({\n    username: '',\n    password: ''\n  });\n\n  async function storeToken() {\n    try {\n      const response = await fetch(`${BASE_URL}/login`, {\n        method: 'POST',\n        header: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: user\n        })\n      });\n      const data = await response.json(); //replace 'vb-token'\n\n      console.log(data);\n      localStorage.setItem('vb-token', data.token);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    storeToken();\n  }\n\n  function handleInput(event) {\n    const userKey = event.target.attributes['name'].value;\n    const newState = { ...user\n    };\n    newState[userKey] = event.target.value;\n    setUser(newState);\n    console.log(user, setUser);\n  }\n\n  const LogOut = () => {\n    localStorage.clear();\n    window.location.href = \"/login\";\n  };\n\n  const isLoggedIn = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        name: \"username\",\n        value: user.username,\n        onChange: handleInput,\n        placeholder: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        required: true,\n        name: \"password\",\n        value: user.password,\n        onChange: handleInput,\n        placeholder: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password-confirmation\",\n        required: true,\n        name: \"password-confirmation\",\n        value: user.password,\n        onChange: handleInput,\n        placeholder: \"password-confirmation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"dx7EN7rI28J1tVdWrQ16h/QxZtY=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/mnt/c/Users/charl/Desktop/Fullstack Academy/course_work/Stranger-s-Things/Stranger-s-Things/src/components/Login.js"],"names":["React","useState","Link","BASE_URL","Login","user","setUser","username","password","storeToken","response","fetch","method","header","body","JSON","stringify","data","json","console","log","localStorage","setItem","token","error","handleSubmit","event","preventDefault","handleInput","userKey","target","attributes","value","newState","LogOut","clear","window","location","href","isLoggedIn"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst BASE_URL = 'https://strangers-things.herokuapp.com';\n\nconst Login = () => {\n    const BASE_URL = 'https://strangers-things.herokuapp.com/api/';\n    const [user, setUser] = useState({username: '', password: ''});\n\n    async function storeToken() {\n        try {\n            const response = await fetch(`${BASE_URL}/login`, {\n                method: 'POST',\n                header: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({user: user})\n            });\n            const data = await response.json();\n            //replace 'vb-token'\n            console.log(data);\n            localStorage.setItem('vb-token', data.token);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        storeToken();\n    }\n\n    function handleInput(event) {\n        const userKey = event.target.attributes['name'].value;\n        const newState = {...user};\n        newState[userKey] = event.target.value;\n        setUser(newState);\n        console.log(user, setUser)\n    }\n\n    const LogOut = () => {\n        localStorage.clear();\n        window.location.href = \"/login\";\n    }\n\n    const isLoggedIn = () => {\n        \n    }\n\n    return (\n        <div>\n            {/* <Link to='/'>Virtual Bartender</Link> */}\n            <form onSubmit={handleSubmit}>\n                <input type='text'\n                        required\n                        name='username'\n                        value={user.username}\n                        onChange={handleInput}\n                        placeholder='username'/>\n                <input type='password'\n                        required\n                        name='password'\n                        value={user.password}\n                        onChange={handleInput}\n                        placeholder='password'></input>\n                <input type='password-confirmation'\n                        required\n                        name='password-confirmation'\n                        value={user.password}\n                        onChange={handleInput}\n                        placeholder='password-confirmation'></input>\n                <button>Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}